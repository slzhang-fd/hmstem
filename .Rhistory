Y <- 1 * (Y_star>0)
system.time(res1 <- hiera_3factor(Y, x_covs, j_ind, i_ind, jt_ind, max_steps = 500))
res_summary(res1, burnin = 250, p, K)
coeffs
B_e %*% t(B_e)
round(B_u %*% t(B_u),2)
round(B_v %*% t(B_v),2)
round(B_w %*% t(B_w),2)
plot(res[[3]])
plot(res1[[3]])
reorder_ind <- sample(1:NN, replace = F)
reorder_ind
dim(x_covs)
res2 <- hiera_3factor(Y[reorder_ind,], x_covs[reorder_ind,], j_ind[reorder_ind], i_ind[reorder_ind], jt_ind[reorder_ind], max_steps = 500)
dim(Y[reorder_ind,])
res2 <- hiera_3factor(matrix(Y[reorder_ind,],ncol = K), x_covs[reorder_ind,], j_ind[reorder_ind], i_ind[reorder_ind], jt_ind[reorder_ind], max_steps = 500)
res_summary(res2, burnin = 250, p, K)
res_summary(res1, burnin = 250, p, K)
res3 <- hiera_3factor(matrix(Y,ncol = K), x_covs[reorder_ind,], j_ind[reorder_ind], i_ind[reorder_ind], jt_ind[reorder_ind], max_steps = 500)
res_summary(res3, burnin = 250, p, K)
res3 <- hiera_3factor(matrix(Y[reorder_ind,],ncol = K), x_covs[reorder_ind,], j_ind[reorder_ind], i_ind[reorder_ind], jt_ind, max_steps = 500)
res_summary(res3, burnin = 250, p, K)
coeffs
res_summary(res1, burnin = 250, p, K)
res_summary(res2, burnin = 250, p, K)
coeffs
B_e %*% t(B_e)
round(B_u %*% t(B_u),2)
round(B_v %*% t(B_v),2)
round(B_w %*% t(B_w),2)
jags_data <- list(y = Y,
NN = NN,
N = N,
ind = i_ind,
cpid = j_ind,
cp_num = max(j_ind),
wave_cp_id = jt_ind,
wave_cp_num = max(jt_ind))
# chdexc[,pidp,by=.(shid9,wave)][1:10,]
# chdexc[,.N,by=.(shid9,wave)]
source("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/JAGS_code/chdany_3levels_JAGS2.R")
jags_res <- run.jags(chdany_3levels.jags2, n.chains = 1, sample = 1000, thin = 1,
burnin = 1000, adapt = 1000, data = jags_data, inits = initval,
method = "parallel", modules = 'glm',
monitor=c("btp", "sig2.u", "sig2.ucp", "sig2.w"))
# chdexc[,pidp,by=.(shid9,wave)][1:10,]
# chdexc[,.N,by=.(shid9,wave)]
library(runjags)
jags_res <- run.jags(chdany_3levels.jags2, n.chains = 1, sample = 1000, thin = 1,
burnin = 1000, adapt = 1000, data = jags_data, inits = initval,
method = "parallel", modules = 'glm',
monitor=c("btp", "sig2.u", "sig2.ucp", "sig2.w"))
initval <-list('y_s'= jags_data$y)
jags_res <- run.jags(chdany_3levels.jags2, n.chains = 1, sample = 1000, thin = 1,
burnin = 1000, adapt = 1000, data = jags_data, inits = initval,
method = "parallel", modules = 'glm',
monitor=c("btp", "sig2.u", "sig2.ucp", "sig2.w"))
Y
as.vector(Y)
jags_data <- list(y = as.vector(Y),
NN = NN,
N = N,
ind = i_ind,
cpid = j_ind,
cp_num = max(j_ind),
wave_cp_id = jt_ind,
wave_cp_num = max(jt_ind))
initval <-list('y_s'= jags_data$y)
# chdexc[,pidp,by=.(shid9,wave)][1:10,]
# chdexc[,.N,by=.(shid9,wave)]
library(runjags)
source("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/JAGS_code/chdany_3levels_JAGS2.R")
jags_res <- run.jags(chdany_3levels.jags2, n.chains = 1, sample = 1000, thin = 1,
burnin = 1000, adapt = 1000, data = jags_data, inits = initval,
method = "parallel", modules = 'glm',
monitor=c("btp", "sig2.u", "sig2.ucp", "sig2.w"))
summary(jags_res)
res_summary(res1, burnin = 250, p, K)
# p coefficients
p <- 1
## set true parameters
# mu <- runif(K, -1, 1)
coeffs <- matrix(rnorm(K*p),p,K)
x_covs <- cbind(rep(1,NN),matrix(rnorm(NN*(p-1)),NN,(p-1)))
x_covs
Sigma_e <- matrix(0.1, K, K)
diag(Sigma_e) <- 1
B_e <- t(chol(Sigma_e))
# diag(B_e) <- 1
Sigma_e <- B_e %*% t(B_e)
Sigma_u <- matrix(0.2, K,K)
diag(Sigma_u) <- runif(K, 1,2)
B_u <- t(chol(Sigma_u))
Sigma_v <- matrix(0.15, K,K)
diag(Sigma_v) <- runif(K, 1,2)
B_v <- t(chol(Sigma_v))
Sigma_w <- matrix(0.15, K, K)
diag(Sigma_w) <- runif(K, 1,2)
B_w <- t(chol(Sigma_w))
j_ind <- rep(1:J, each=9)
i_ind <- rep(1:N, each=3)
t_ind <- rep(1:3, N)
jt_ind <- as.numeric(as.factor(paste(j_ind,t_ind)))
# View(cbind(j_ind,t_ind,jt_ind))
Y <- matrix(0, NN, K)
## generate random variables
U_all <- rmvnorm(N, sigma = B_u %*% t(B_u))
V_all <- rmvnorm(J, sigma = B_v %*% t(B_v))
W_all <- rmvnorm(max(jt_ind), sigma = B_w %*% t(B_w))
# Y_star <- outer(rep(1,NN), mu) + U_all[i_ind,] + V_all[j_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y_star <- x_covs %*% coeffs + U_all[i_ind,] + V_all[j_ind,] + W_all[jt_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y <- 1 * (Y_star>0)
res1 <- hiera_3factor(matrix(Y,ncol = K), x_covs, j_ind, i_ind, jt_ind, max_steps = 500)
res_summary(res1, burnin = 250, p, K)
coeffs
round(B_v %*% t(B_v),2)
round(B_w %*% t(B_w),2)
round(B_u %*% t(B_u),2)
round(B_v %*% t(B_v),2)
round(B_w %*% t(B_w),2)
jags_data <- list(y = as.vector(Y),
NN = NN,
N = N,
ind = i_ind,
cpid = j_ind,
cp_num = max(j_ind),
wave_cp_id = jt_ind,
wave_cp_num = max(jt_ind))
initval <-list('y_s'= jags_data$y)
# chdexc[,pidp,by=.(shid9,wave)][1:10,]
# chdexc[,.N,by=.(shid9,wave)]
library(runjags)
source("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/JAGS_code/chdany_3levels_JAGS2.R")
jags_res <- run.jags(chdany_3levels.jags2, n.chains = 1, sample = 1000, thin = 1,
burnin = 1000, adapt = 1000, data = jags_data, inits = initval,
method = "parallel", modules = 'glm',
monitor=c("btp", "sig2.u", "sig2.ucp", "sig2.w"))
summary(jags_res)
coeffs
B_e %*% t(B_e)
round(B_u %*% t(B_u),2)
round(B_v %*% t(B_v),2)
round(B_w %*% t(B_w),2)
res_summary(res1, burnin = 250, p, K)
# sec4_data <- as.data.table(read_dta("sec4_data.dta"))
library(data.table)
library(haven)
chdexc <- as.data.table(read_dta("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/data/chdexc.dta"))
jags_data <- list(y = chdexc$aidtcany,
NN = nrow(chdexc),
N = max(as.numeric(as.factor(chdexc$pidp))),
ind = as.numeric(as.factor(chdexc$pidp)),
cpid = as.numeric(as.factor(chdexc$shid9)),
cp_num = max(as.numeric(as.factor(chdexc$shid9))),
wave_cp_id = as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave))),
wave_cp_num = max(as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave)))))
source("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/JAGS_code/chdany_3levels_JAGS2.R")
K <- 1
NN <- length(jags_data$y)
p <- 1
jags_data <- list(y = chdexc$aidtcany,
NN = nrow(chdexc),
N = max(as.numeric(as.factor(chdexc$pidp))),
ind = as.numeric(as.factor(chdexc$pidp)),
cpid = as.numeric(as.factor(chdexc$shid9)),
cp_num = max(as.numeric(as.factor(chdexc$shid9))),
wave_cp_id = as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave))),
wave_cp_num = max(as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave)))))
K <- 1
NN <- length(jags_data$y)
p <- 1
res_3fac <- hiera_3factor(matrix(jags_data$y,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind, jt_ind=jags_data$wave_cp_id,
max_steps = 500)
res_summary(res_3fac, burnin = 250, p, K)
source("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/JAGS_code/chdany_3levels_JAGS2.R")
jags_res <- run.jags(chdany_3levels.jags2, n.chains = 1, sample = 1000, thin = 1,
burnin = 1000, adapt = 1000, data = jags_data, inits = initval,
method = "parallel", modules = 'glm',
monitor=c("btp", "sig2.u", "sig2.ucp", "sig2.w"))
jags_data <- list(y = chdexc$aidtcany,
NN = nrow(chdexc),
N = max(as.numeric(as.factor(chdexc$pidp))),
ind = as.numeric(as.factor(chdexc$pidp)),
cpid = as.numeric(as.factor(chdexc$shid9)),
cp_num = max(as.numeric(as.factor(chdexc$shid9))),
wave_cp_id = as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave))),
wave_cp_num = max(as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave)))))
initval <-list('y_s'= jags_data$y)
source("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/JAGS_code/chdany_3levels_JAGS2.R")
jags_res <- run.jags(chdany_3levels.jags2, n.chains = 1, sample = 1000, thin = 1,
burnin = 1000, adapt = 1000, data = jags_data, inits = initval,
method = "parallel", modules = 'glm',
monitor=c("btp", "sig2.u", "sig2.ucp", "sig2.w"))
summary(jags_res)
res_summary(res_3fac, burnin = 250, p, K)
library(hmstem)
res_3fac <- hiera_3factor(matrix(jags_data$y,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind, jt_ind=jags_data$wave_cp_id,
max_steps = 500)
res_summary(res_3fac, burnin = 250, p, K)
summary(jags_res)
res_summary(res_3fac, burnin = 250, p, K)
system.time(res_3fac <- hiera_3factor(matrix(jags_data$y,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind, jt_ind=jags_data$wave_cp_id,
max_steps = 500))
res_summary(res_3fac, burnin = 250, p, K)
summary(jags_res)
res_summary(res_3fac, burnin = 300, p, K)
plot(res_3fac[[3]])
plot(res_3fac[[4]])
plot(res_3fac[[5]])
system.time(res_3fac <- hiera_3factor(matrix(jags_data$y,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind, jt_ind=jags_data$wave_cp_id,
max_steps = 1000))
res_summary(res_3fac, burnin = 500, p, K)
summary(jags_res)
plot(res_3fac[[1]])
plot(res_3fac[[3]])
summary(jags_res)["Mean"]
summary(jags_res)[,"Mean"]
summary(jags_res)[,4]
res_summary(res_3fac, burnin = 500, p, K)
c(res_summary(res_3fac, burnin = 500, p, K))
unlist(res_summary(res_3fac, burnin = 500, p, K))
summary(jags_res)[,4]
plot(res_3fac[[1]])
plot(res_3fac[[3]])
plot(res_3fac[[4]])
plot(res_3fac[[5]])
system.time(res_3fac <- hiera_3factor(matrix(jags_data$y,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind, jt_ind=jags_data$wave_cp_id,
max_steps = 2000))
plot(res_3fac[[1]])
plot(res_3fac[[3]])
plot(res_3fac[[5]])
plot(res_3fac[[4]])
unlist(res_summary(res_3fac, burnin = 1000, p, K))
summary(jags_res)[,4]
summary(jags_res)
summary(jags_res)[,2]
unlist(res_summary(res_3fac, burnin = 1000, p, K))
library(hmstem)
library(truncnorm)
library(mvtnorm)
library(hmstem)
K <- 4
# group number
J <- 20000
# 2 individuals in each group
N <- 40000
# 2 time points for each individual
NN <- 80000
# p coefficients
p <- 5
## set true parameters
# mu <- runif(K, -1, 1)
coeffs <- matrix(rnorm(K*p),p,K)
x_covs <- cbind(rep(1,NN),matrix(rnorm(NN*(p-1)),NN,(p-1)))
Sigma_e <- matrix(0.1, K, K)
diag(Sigma_e) <- 1
B_e <- t(chol(Sigma_e))
# diag(B_e) <- 1
Sigma_e <- B_e %*% t(B_e)
Sigma_u <- matrix(0.2, K,K)
diag(Sigma_u) <- runif(K, 1,2)
B_u <- t(chol(Sigma_u))
Sigma_v <- matrix(0.15, K,K)
diag(Sigma_v) <- runif(K, 1,2)
B_v <- t(chol(Sigma_v))
Sigma_w <- matrix(0.15, K, K)
diag(Sigma_w) <- runif(K, 1,2)
B_w <- t(chol(Sigma_w))
K <- 4
# group number
J <- 20000
# 2 individuals in each group
N <- 40000
# 2 time points for each individual
NN <- 80000
# p coefficients
p <- 5
## set true parameters
# mu <- runif(K, -1, 1)
coeffs <- matrix(rnorm(K*p),p,K)
x_covs <- cbind(rep(1,NN),matrix(rnorm(NN*(p-1)),NN,(p-1)))
Sigma_e <- matrix(0.1, K, K)
diag(Sigma_e) <- 1
B_e <- t(chol(Sigma_e))
# diag(B_e) <- 1
Sigma_e <- B_e %*% t(B_e)
Sigma_u <- matrix(0.2, K,K)
diag(Sigma_u) <- runif(K, 1,2)
B_u <- t(chol(Sigma_u))
Sigma_v <- matrix(0.15, K,K)
diag(Sigma_v) <- runif(K, 1,2)
B_v <- t(chol(Sigma_v))
Sigma_w <- matrix(0.1, K, K)
diag(Sigma_w) <- runif(K, 1,2)
B_w <- t(chol(Sigma_w))
j_ind <- rep(1:J, each=4)
i_ind <- rep(1:N, each=2)
t_ind <- rep(1:2, N)
jt_ind <- as.numeric(as.factor(paste(j_ind,t_ind)))
# View(cbind(j_ind,t_ind,jt_ind))
Y <- matrix(0, NN, K)
## generate random variables
U_all <- rmvnorm(N, sigma = B_u %*% t(B_u))
V_all <- rmvnorm(J, sigma = B_v %*% t(B_v))
W_all <- rmvnorm(max(jt_ind), sigma = B_w %*% t(B_w))
# Y_star <- outer(rep(1,NN), mu) + U_all[i_ind,] + V_all[j_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y_star <- x_covs %*% coeffs + U_all[i_ind,] + V_all[j_ind,] + W_all[jt_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y <- 1 * (Y_star>0)
system.time(res1 <- hiera_3factor(Y, x_covs, j_ind, i_ind, jt_ind, max_steps = 500))
## check results
coeffs
res_summary(res1, burnin = 250, p, K)
B_e %*% t(B_e)
K <- 4
# group number
J <- 10000
# 2 individuals in each group
N <- 30000
# 2 time points for each individual
NN <- 90000
# p coefficients
p <- 2
## set true parameters
# mu <- runif(K, -1, 1)
coeffs <- matrix(rnorm(K*p),p,K)
x_covs <- cbind(rep(1,NN),matrix(rnorm(NN*(p-1)),NN,(p-1)))
Sigma_e <- matrix(0.1, K, K)
diag(Sigma_e) <- 1
B_e <- t(chol(Sigma_e))
# diag(B_e) <- 1
Sigma_e <- B_e %*% t(B_e)
Sigma_u <- matrix(0.2, K,K)
diag(Sigma_u) <- runif(K, 1,2)
B_u <- t(chol(Sigma_u))
Sigma_v <- matrix(0.15, K,K)
diag(Sigma_v) <- runif(K, 1,2)
B_v <- t(chol(Sigma_v))
Sigma_w <- matrix(0.15, K, K)
diag(Sigma_w) <- runif(K, 1,2)
B_w <- t(chol(Sigma_w))
j_ind <- rep(1:J, each=9)
i_ind <- rep(1:N, each=3)
t_ind <- rep(1:3, N)
jt_ind <- as.numeric(as.factor(paste(j_ind,t_ind)))
# View(cbind(j_ind,t_ind,jt_ind))
Y <- matrix(0, NN, K)
## generate random variables
U_all <- rmvnorm(N, sigma = B_u %*% t(B_u))
V_all <- rmvnorm(J, sigma = B_v %*% t(B_v))
W_all <- rmvnorm(max(jt_ind), sigma = B_w %*% t(B_w))
# Y_star <- outer(rep(1,NN), mu) + U_all[i_ind,] + V_all[j_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y_star <- x_covs %*% coeffs + U_all[i_ind,] + V_all[j_ind,] + W_all[jt_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y <- 1 * (Y_star>0)
res1 <- hiera_3factor(matrix(Y,ncol = K), x_covs, j_ind, i_ind, jt_ind, max_steps = 500)
## check results
coeffs
res_summary(res1, burnin = 250, p, K)
round(res_summary(res1, burnin = 250, p, K),2)
round(res_summary(res1, burnin = 250, p, K)[[2]],2)
B_e %*% t(B_e)
round(B_u %*% t(B_u),2)
round(res_summary(res1, burnin = 250, p, K)[[3]],2)
round(B_w %*% t(B_w),2)
round(B_v %*% t(B_v),2)
round(res_summary(res1, burnin = 250, p, K)[[4]],2)
round(B_w %*% t(B_w),2)
round(res_summary(res1, burnin = 250, p, K)[[5]],2)
## check results
coeffs
round(res_summary(res1, burnin = 250, p, K)[[1]],10)
B_e %*% t(B_e)
round(res_summary(res1, burnin = 250, p, K)[[2]],10)
round(res_summary(res1, burnin = 250, p, K)[[2]],2)
B_u %*% t(B_u)
round(B_u %*% t(B_u),2)
round(res_summary(res1, burnin = 250, p, K)[[3]],2)
round(B_v %*% t(B_v),2)
round(B_v %*% t(B_v),2)
round(res_summary(res1, burnin = 250, p, K)[[4]],2)
round(B_w %*% t(B_w),2)
round(res_summary(res1, burnin = 250, p, K)[[5]],2)
library(data.table)
library(haven)
chdexc <- as.data.table(read_dta("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/data/chdexc.dta"))
jags_data <- list(y = chdexc$aidtcany,
NN = nrow(chdexc),
N = max(as.numeric(as.factor(chdexc$pidp))),
ind = as.numeric(as.factor(chdexc$pidp)),
cpid = as.numeric(as.factor(chdexc$shid9)),
cp_num = max(as.numeric(as.factor(chdexc$shid9))),
wave_cp_id = as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave))),
wave_cp_num = max(as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave)))))
initval <-list('y_s'= jags_data$y)
K <- 1
NN <- length(jags_data$y)
p <- 1
res_2fac <- hiera_2factor(matrix(jags_data$y,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind,
max_steps = 500)
unlist(res_summary(res_3fac, burnin = 250, p, K))
unlist(res_summary(res_2fac, burnin = 250, p, K))
library(truncnorm)
library(mvtnorm)
library(hmstem)
## simulate data
K <- 4
# group number
J <- 10000
# 2 individuals in each group
N <- 20000
# 2 time points for each individual
NN <- 40000
# p coefficients
p <- 5
## set true parameters
# mu <- runif(K, -1, 1)
coeffs <- matrix(rnorm(K*p),p,K)
x_covs <- cbind(rep(1,NN),matrix(rnorm(NN*(p-1)),NN,(p-1)))
Sigma_e <- matrix(0.2, K, K)
diag(Sigma_e) <- 1
B_e <- t(chol(Sigma_e))
# diag(B_e) <- 1
Sigma_e <- B_e %*% t(B_e)
Sigma_u <- matrix(0.3, K,K)
diag(Sigma_u) <- runif(K, 1,2)
B_u <- t(chol(Sigma_u))
Sigma_v <- matrix(0.2, K,K)
diag(Sigma_v) <- runif(K, 1,2)
B_v <- t(chol(Sigma_v))
j_ind <- rep(1:J, each=4)
i_ind <- rep(1:N, each=2)
Y <- matrix(0, NN, K)
## generate random variables
U_all <- rmvnorm(N, sigma = B_u %*% t(B_u))
V_all <- rmvnorm(J, sigma = B_v %*% t(B_v))
# Y_star <- outer(rep(1,NN), mu) + U_all[i_ind,] + V_all[j_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y_star <- x_covs %*% coeffs + U_all[i_ind,] + V_all[j_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y <- 1 * (Y_star>0)
system.time(res1 <- hiera_2factor(Y, x_covs, j_ind, i_ind, max_steps = 500))
res_summary(res1)
res_summary(res1, burnin = 250, p, K)
## check results
coeffs
B_e %*% t(B_e)
round(res_summary(res1, burnin = 250, p, K)[[2]],2)
round(B_u %*% t(B_u),2)
round(res_summary(res1, burnin = 250, p, K)[[3]],2)
round(B_v %*% t(B_v),2)
round(res_summary(res1, burnin = 250, p, K)[[4]],2)
library(data.table)
library(haven)
chdexc <- as.data.table(read_dta("~/Dropbox/Projs/DyLAnIE/3Gen_analysis/updated_version/data/chdexc.dta"))
K <- 1
NN <- length(chdexc$aidtcany)
p <- 1
res_2fac <- hiera_2factor(matrix(chdexc$aidtcany,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind,
max_steps = 500)
jags_data <- list(y = chdexc$aidtcany,
NN = nrow(chdexc),
N = max(as.numeric(as.factor(chdexc$pidp))),
ind = as.numeric(as.factor(chdexc$pidp)),
cpid = as.numeric(as.factor(chdexc$shid9)),
cp_num = max(as.numeric(as.factor(chdexc$shid9))),
wave_cp_id = as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave))),
wave_cp_num = max(as.numeric(as.factor(paste(chdexc$shid9,chdexc$wave)))))
res_2fac <- hiera_2factor(matrix(chdexc$aidtcany,ncol = K), x_covs=matrix(1, NN , p),
j_ind=jags_data$cpid, i_ind=jags_data$ind,
max_steps = 500)
library(truncnorm)
library(mvtnorm)
library(hmstem)
## simulate data
K <- 4
# group number
J <- 10000
# 2 individuals in each group
N <- 20000
# 2 time points for each individual
NN <- 40000
# p coefficients
p <- 5
## set true parameters
# mu <- runif(K, -1, 1)
coeffs <- matrix(rnorm(K*p),p,K)
x_covs <- cbind(rep(1,NN),matrix(rnorm(NN*(p-1)),NN,(p-1)))
Sigma_e <- matrix(0.2, K, K)
diag(Sigma_e) <- 1
B_e <- t(chol(Sigma_e))
# diag(B_e) <- 1
Sigma_e <- B_e %*% t(B_e)
Sigma_u <- matrix(0.3, K,K)
diag(Sigma_u) <- runif(K, 1,2)
B_u <- t(chol(Sigma_u))
Sigma_v <- matrix(0.2, K,K)
diag(Sigma_v) <- runif(K, 1,2)
B_v <- t(chol(Sigma_v))
j_ind <- rep(1:J, each=4)
i_ind <- rep(1:N, each=2)
Y <- matrix(0, NN, K)
## generate random variables
U_all <- rmvnorm(N, sigma = B_u %*% t(B_u))
V_all <- rmvnorm(J, sigma = B_v %*% t(B_v))
# Y_star <- outer(rep(1,NN), mu) + U_all[i_ind,] + V_all[j_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y_star <- x_covs %*% coeffs + U_all[i_ind,] + V_all[j_ind,] + rmvnorm(NN, sigma = B_e %*% t(B_e))
Y <- 1 * (Y_star>0)
res1 <- hiera_2factor(Y, x_covs, j_ind, i_ind, max_steps = 500)
